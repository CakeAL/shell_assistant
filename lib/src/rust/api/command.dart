// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'entity.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

String executeBypassSignature(
        {required String path, required String password}) =>
    RustLib.instance.api
        .crateApiCommandExecuteBypassSignature(path: path, password: password);

void executeWriteScreenshotSettings({required Map<int, String> commandMap}) =>
    RustLib.instance.api
        .crateApiCommandExecuteWriteScreenshotSettings(commandMap: commandMap);

void executeResetScreenshotSettings() =>
    RustLib.instance.api.crateApiCommandExecuteResetScreenshotSettings();

void executeWriteDockSettings(
        {required List<bool> switchStates,
        double? animationTime,
        double? delayTime}) =>
    RustLib.instance.api.crateApiCommandExecuteWriteDockSettings(
        switchStates: switchStates,
        animationTime: animationTime,
        delayTime: delayTime);

void executeResetDockSettings() =>
    RustLib.instance.api.crateApiCommandExecuteResetDockSettings();

String? getUserName() => RustLib.instance.api.crateApiCommandGetUserName();

SystemInfo getSystemInfo() =>
    RustLib.instance.api.crateApiCommandGetSystemInfo();

void openFolder({required String path}) =>
    RustLib.instance.api.crateApiCommandOpenFolder(path: path);

BigInt getFolderSize({required String path}) =>
    RustLib.instance.api.crateApiCommandGetFolderSize(path: path);

String getIconAndConvert({required String path}) =>
    RustLib.instance.api.crateApiCommandGetIconAndConvert(path: path);

String setNvram(
        {required int function, int? value, required String password}) =>
    RustLib.instance.api.crateApiCommandSetNvram(
        function: function, value: value, password: password);

Set<Architecture> getAppArch({required String path}) =>
    RustLib.instance.api.crateApiCommandGetAppArch(path: path);
